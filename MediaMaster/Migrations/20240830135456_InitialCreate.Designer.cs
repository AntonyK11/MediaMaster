// <auto-generated />
using System;
using MediaMaster.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaMaster.Migrations
{
    [DbContext(typeof(MediaDbContext))]
    [Migration("20240830135456_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MediaMaster.DataBase.Models.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Added")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MediaId");

                    b.HasIndex("Added");

                    b.HasIndex("IsArchived");

                    b.HasIndex("IsFavorite");

                    b.HasIndex("Modified");

                    b.HasIndex("Name");

                    b.HasIndex("Uri")
                        .IsUnique();

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("MediaMaster.DataBase.Models.MediaTag", b =>
                {
                    b.Property<int>("MediaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MediaId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("MediaTags");
                });

            modelBuilder.Entity("MediaMaster.DataBase.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Argb")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstParentReferenceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Flags")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Shorthand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MediaMaster.DataBase.Models.TagTag", b =>
                {
                    b.Property<int>("ChildrenTagId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentsTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChildrenTagId", "ParentsTagId");

                    b.HasIndex("ParentsTagId");

                    b.ToTable("TagTags");
                });

            modelBuilder.Entity("MediaMaster.DataBase.Models.MediaTag", b =>
                {
                    b.HasOne("MediaMaster.DataBase.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaMaster.DataBase.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MediaMaster.DataBase.Models.TagTag", b =>
                {
                    b.HasOne("MediaMaster.DataBase.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("ChildrenTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaMaster.DataBase.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("ParentsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
